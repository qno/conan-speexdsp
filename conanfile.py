from conans import ConanFile, CMake, AutoToolsBuildEnvironment, tools
import os


class SpeexdspConan(ConanFile):
    name = "SpeexDSP"
    version = "1.2rc3"
    license = "BSD"
    author = "Xiph.Org Foundation"
    url = "https://github.com/qno/conan-speexdsp"
    description = "SpeexDSP is a patent-free, Open Source/Free Software DSP library."

    settings = "os", "compiler", "build_type", "arch"
    options = {"shared": [True, False]}
    default_options = "shared=False"
    generators = "cmake"

    _speexdsp_pkg_name = "speexdsp-1.2rc3"
    _speexdsp_libname = "speexdsp"

    def source(self):
        url = "http://downloads.xiph.org/releases/speex/{}.tar.gz".format(self._speexdsp_pkg_name)
        self.output.info("Downloading {}".format(url))
        tools.get(url)
        self._createCMakeLists()

    def build(self):
        if self._isVisualStudioBuild():
            cmake = CMake(self)
            cmake.configure(source_dir=self._speexdsp_pkg_name)
            cmake.build()
        else:
            autotools = AutoToolsBuildEnvironment(self)
            autotools.configure(configure_dir=self._speexdsp_pkg_name)
            autotools.make()
            autotools.install()

    def package(self):
        self.copy("include/speex/*.h", dst=".", src=self._speexdsp_pkg_name)
        if self._isVisualStudioBuild():
            self.copy("win32/config.h", dst="include", src=self._speexdsp_pkg_name)
        self.copy("*{}.lib".format(self._speexdsp_libname), dst="lib", keep_path=False)
        self.copy("*.dll", dst="bin", keep_path=False)
        self.copy("*.so", dst="lib", keep_path=False)
        self.copy("*.dylib", dst="lib", keep_path=False)
        self.copy("*.a", dst="lib", keep_path=False)

    def package_info(self):
        self.cpp_info.libs = [self._speexdsp_libname]
        if self._isVisualStudioBuild():
            # in include/win32 config.h is provided
            self.cpp_info.includedirs = ["include", "include/win32"]

    def _isVisualStudioBuild(self):
        return self.settings.os == "Windows" and self.settings.compiler == "Visual Studio"

    def _createCMakeLists(self):
        content = '''\
# THIS FILE WAS GENERATED BY CONAN. DO NOT EDIT THIS FILE!
cmake_minimum_required(VERSION 3.5)
project(SpeexDSP)
include(${{CMAKE_BINARY_DIR}}/conanbuildinfo.cmake)
conan_basic_setup()
set(LIBSPEEXDSP "{}")
if (NOT MSVC)
message(FATAL_ERROR "Abort proccessing - this CMake project has only support for MS Visual Studio!")
endif ()
set(SOURCES libspeexdsp/buffer.c
            libspeexdsp/fftwrap.c
            libspeexdsp/filterbank.c
            libspeexdsp/jitter.c
            libspeexdsp/kiss_fft.c
            libspeexdsp/kiss_fftr.c
            libspeexdsp/mdf.c
            libspeexdsp/preprocess.c
            libspeexdsp/resample.c
            libspeexdsp/scal.c
            libspeexdsp/smallft.c)
add_library(${{LIBSPEEXDSP}} ${{SOURCES}})
target_include_directories(${{LIBSPEEXDSP}} PRIVATE include libspeexdsp win32)
target_compile_definitions(${{LIBSPEEXDSP}} PRIVATE D_LIB HAVE_CONFIG_H)
'''.format(self._speexdsp_libname)

        cmake_file = os.path.join(self._speexdsp_pkg_name, "CMakeLists.txt")
        f = open(cmake_file, "w+")
        f.write(content)
        f.close()
